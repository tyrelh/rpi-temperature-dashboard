import React, {useEffect, useState} from 'react';
import type { GetServerSideProps, NextPage } from 'next';
import Head from 'next/head';
import {LineChart, Line, XAxis, YAxis} from "recharts";
import { URLSearchParams } from 'url';
import TemperaturePreview from '../components/TemperaturePreview';
import { Temperature } from '../DTOS/Temperature';

const API_URL = "https://9g41d991c8.execute-api.ca-central-1.amazonaws.com/prod"
const TEMPERATURE_ENDPOINT = "/temperature"
const TEMPERATURES_ENDPOINT = "/temperatures"

function generateDummyData() {
  const data = [];
  let lastValue = 20;
  let lastTime = 1650677189006;
  for (let i = 2; i > 0; i--) {
    const r1 = Math.random() * (i == 2 ? 1 : -1);
    for (let j = 50; j > 0; j--) {
      const r2 = Math.random()
      lastValue = lastValue + (r1 * r2);
      lastTime = lastTime + 1000;
      data.push({
        "uuid": Math.random().toString(),
        "time": lastTime,
        "location": "sunroom",
        "value": lastValue
      });
    }
  }
  return data
}

const Home: NextPage = (props) => {

  const date = new Date(props.time);
  const latestTemperature: Temperature = {
    value: props.value,
    date: date,
    location: props.location
  }

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <TemperaturePreview latestTemperature={latestTemperature}/>
      <TemperaturePreview latestTemperature={latestTemperature}/>
    </div>
  )
}

export default Home


export const getServerSideProps: GetServerSideProps = async (context) => {
  const date = new Date();

  var params = {
    location: 'office',
    date: date.getTime().toString()
  };

  // console.log("Request params: ", params);
  const esc = encodeURIComponent;
  const query = Object.keys(params).map(k => esc(k) + '=' + esc(params[k])).join('&');
  const url = API_URL + TEMPERATURE_ENDPOINT + "?" + query;
  // console.log(url)
  const response = await fetch(url)
  // console.log("Raw response: ", response);
  const body = await response.json();
  if (!body) {
    console.log("No results returned from api")
    return {
      props: {}
    }
  }
  console.log(body)

  return {
    props: body
  }
}
